# KDE tags expanded automatically by am_edit - $Revision: 1.1.1.1 $ 
# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

####### kdevelop will overwrite this part!!! (begin)##########


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
#>- 
bindir = @bindir@
#>+ 3
DEPDIR = .deps

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@
ARTSCCONFIG = @ARTSCCONFIG@
AS = @AS@
AUTODIRS = @AUTODIRS@
CC = @CC@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CXX = @CXX@
CXXCPP = @CXXCPP@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DLLTOOL = @DLLTOOL@
DPMSINC = @DPMSINC@
DPMSLIB = @DPMSLIB@
EXEEXT = @EXEEXT@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GLINC = @GLINC@
GLLIB = @GLLIB@
GMSGFMT = @GMSGFMT@
IDL = @IDL@
IDL_DEPENDENCIES = @IDL_DEPENDENCIES@
JAR = @JAR@
JAVAC = @JAVAC@
JAVAH = @JAVAH@
JVMLIBS = @JVMLIBS@
KDECONFIG = @KDECONFIG@
KDE_CXXFLAGS = @KDE_CXXFLAGS@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LEX = @LEX@
LEXLIB = @LEXLIB@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBGEN = @LIBGEN@
LIBJPEG = @LIBJPEG@
LIBMICO = @LIBMICO@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBPYTHON = @LIBPYTHON@
LIBQIMGIO = @LIBQIMGIO@
LIBRESOLV = @LIBRESOLV@
LIBSHADOW = @LIBSHADOW@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTIFF = @LIBTIFF@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBXINERAMA = @LIBXINERAMA@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMGIO = @LIB_KIMGIO@
LIB_KIO = @LIB_KIO@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_QTOPIA = @LIB_QTOPIA@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LN_S = @LN_S@
MAKEINFO = @MAKEINFO@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MICO_INCLUDES = @MICO_INCLUDES@
MICO_LDFLAGS = @MICO_LDFLAGS@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
NOREPO = @NOREPO@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PAMLIBS = @PAMLIBS@
PASSWDLIBS = @PASSWDLIBS@
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
PYTHONMODDIR = @PYTHONMODDIR@
QTE_NORTTI = @QTE_NORTTI@
QTOPIA_INCLUDES = @QTOPIA_INCLUDES@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
REPO = @REPO@
SETUIDFLAGS = @SETUIDFLAGS@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
all_includes = @all_includes@
all_libraries = @all_libraries@
idldir = @idldir@
jni_includes = @jni_includes@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
micodir = @micodir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
x_includes = @x_includes@
x_libraries = @x_libraries@

bin_PROGRAMS = kssh

#>- kssh_SOURCES = ksshdialog.ui kssh.cpp main.cpp 
#>+ 1
kssh_SOURCES= kssh.cpp main.cpp  ksshdialog.cpp
kssh_LDADD = $(LIB_KFILE) $(LIB_KDEUI) $(LIB_KDECORE) $(LIB_QT) $(LIBSOCKET)

EXTRA_DIST = main.cpp kssh.cpp kssh.h kssh.desktop lo32-app-kssh.png ksshdialog.ui ssh.desktop lo16-app-kssh.png hi48-app-kssh.png hi16-app-kssh.png hi22-app-kssh.png 

####### kdevelop will overwrite this part!!! (end)############
# this 10 paths are KDE specific. Use them:
# kde_htmldir       Where your docs should go to. (contains lang subdirs)
# kde_appsdir       Where your application file (.kdelnk) should go to. 
# kde_icondir       Where your icon should go to.
# kde_minidir       Where your mini icon should go to.
# kde_datadir       Where you install application data. (Use a subdir)
# kde_locale        Where translation files should go to.(contains lang subdirs)
# kde_cgidir        Where cgi-bin executables should go to.
# kde_confdir       Where config files should go to.
# kde_mimedir       Where mimetypes should go to.
# kde_toolbardir    Where general toolbar icons should go to.
# kde_wallpaperdir  Where general wallpapers should go to.

# set the include path for X, qt and KDE
INCLUDES = $(all_includes)

#>- METASOURCES = AUTO

# the library search path. 
kssh_LDFLAGS = $(all_libraries) $(KDE_RPATH)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
bin_PROGRAMS =  kssh$(EXEEXT)
PROGRAMS =  $(bin_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
#>- kssh_OBJECTS =  kssh.$(OBJEXT) main.$(OBJEXT)
#>+ 6
kssh_final_OBJECTS = kssh.all_cpp.o 
kssh_nofinal_OBJECTS = kssh.$(OBJEXT) main.$(OBJEXT) ksshdialog.$(OBJEXT)\
	kssh.moc.o  \
	kssh_meta_unload.o 
@KDE_USE_FINAL_FALSE@kssh_OBJECTS = $(kssh_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@kssh_OBJECTS = $(kssh_final_OBJECTS)
kssh_DEPENDENCIES = 
CXXFLAGS = @CXXFLAGS@
#>- CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 1
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 1
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
#>+ 1
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in


#>- DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)
#>+ 4
KDE_DIST=mini-kssh.png largekssh.png hi32-app-kssh.png kssh32.png 

DISTFILES= $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)


TAR = gtar
GZIP_ENV = --best
SOURCES = $(kssh_SOURCES)
OBJECTS = $(kssh_OBJECTS)

#>- all: all-redirect
#>+ 1
all: docs-am  all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .cpp .lo .o .obj .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
#>- 	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps kssh/Makefile
#>+ 2
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps kssh/Makefile
	cd $(top_srcdir) && perl admin/am_edit kssh/Makefile.in

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	&& CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	if test -f $$p; then \
	echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	$(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

kssh$(EXEEXT): $(kssh_OBJECTS) $(kssh_DEPENDENCIES)
	@rm -f kssh$(EXEEXT)
	$(CXXLINK) $(kssh_LDFLAGS) $(kssh_OBJECTS) $(kssh_LDADD) $(LIBS)
.cpp.o:
	$(CXXCOMPILE) -c $<
.cpp.obj:
	$(CXXCOMPILE) -c `cygpath -w $<`
.cpp.lo:
	$(LTCXXCOMPILE) -c $<

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	awk '    { files[$$0] = 1; } \
	END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	&& mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	awk '    { files[$$0] = 1; } \
	END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	|| (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = kssh

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	d=$(srcdir); \
	if test -d $$d/$$file; then \
	cp -pr $$d/$$file $(distdir)/$$file; \
	else \
	test -f $(distdir)/$$file \
	|| ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	|| cp -p $$d/$$file $(distdir)/$$file || :; \
	fi; \
	done

info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-binPROGRAMS
install-exec: install-exec-am

install-data-am: install-data-local
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-binPROGRAMS uninstall-local
uninstall: uninstall-am
all-am: Makefile $(PROGRAMS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(bindir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-binPROGRAMS mostlyclean-compile \
	mostlyclean-libtool mostlyclean-tags \
	mostlyclean-generic

mostlyclean: mostlyclean-am

#>- clean-am:  clean-binPROGRAMS clean-compile clean-libtool clean-tags \
#>- clean-generic mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-ui clean-moc-classes clean-final   clean-binPROGRAMS clean-compile clean-libtool clean-tags \
	clean-generic mostlyclean-am

#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

distclean-am:  distclean-binPROGRAMS distclean-compile distclean-libtool \
	distclean-tags distclean-generic clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-binPROGRAMS \
	maintainer-clean-compile maintainer-clean-libtool \
	maintainer-clean-tags maintainer-clean-generic \
	distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
	maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
	mostlyclean-compile distclean-compile clean-compile \
	maintainer-clean-compile mostlyclean-libtool distclean-libtool \
	clean-libtool maintainer-clean-libtool tags mostlyclean-tags \
	distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
	dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
	install-exec install-data-local install-data-am install-data install-am \
	install uninstall-local uninstall-am uninstall all-redirect all-am all \
	installdirs mostlyclean-generic distclean-generic clean-generic \
	maintainer-clean-generic clean mostlyclean distclean maintainer-clean


install-data-local:
#>- 	$(mkinstalldirs) $(kde_appsdir)/Internet/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)$(kde_appsdir)/Internet/
#>- 	$(INSTALL_DATA) $(srcdir)/kssh.desktop $(kde_appsdir)/Internet/kssh.desktop
#>+ 1
	$(INSTALL_DATA) $(srcdir)/kssh.desktop $(DESTDIR)$(kde_appsdir)/Internet/kssh.desktop
#>- 	$(mkinstalldirs) $(kde_icondir)/locolor/32x32/apps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/locolor/32x32/apps/
#>- 	$(INSTALL_DATA) $(srcdir)/lo32-app-kssh.png $(kde_icondir)/locolor/32x32/apps/kssh.png
#>+ 1
	$(INSTALL_DATA) $(srcdir)/lo32-app-kssh.png $(DESTDIR)$(kde_icondir)/locolor/32x32/apps/kssh.png
#>- 	$(mkinstalldirs) $(kde_datadir)/konsole/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)$(kde_datadir)/konsole/
#>- 	$(INSTALL_DATA) $(srcdir)/ssh.desktop $(kde_datadir)/konsole/kssh.desktop
#>+ 1
	$(INSTALL_DATA) $(srcdir)/ssh.desktop $(DESTDIR)$(kde_datadir)/konsole/kssh.desktop
#>- 	$(mkinstalldirs) $(kde_icondir)/locolor/16x16/apps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/locolor/16x16/apps/
#>- 	$(INSTALL_DATA) $(srcdir)/lo16-app-kssh.png $(kde_icondir)/locolor/16x16/apps/kssh.png
#>+ 1
	$(INSTALL_DATA) $(srcdir)/lo16-app-kssh.png $(DESTDIR)$(kde_icondir)/locolor/16x16/apps/kssh.png
#>- 	$(mkinstalldirs) $(kde_icondir)/hicolor/48x48/apps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/
#>- 	$(INSTALL_DATA) $(srcdir)/hi48-app-kssh.png $(kde_icondir)/hicolor/48x48/apps/kssh.png
#>+ 1
	$(INSTALL_DATA) $(srcdir)/hi48-app-kssh.png $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/kssh.png
#>- 	$(mkinstalldirs) $(kde_icondir)/hicolor/16x16/apps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/
#>- 	$(INSTALL_DATA) $(srcdir)/hi16-app-kssh.png $(kde_icondir)/hicolor/16x16/apps/kssh.png
#>+ 1
	$(INSTALL_DATA) $(srcdir)/hi16-app-kssh.png $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/kssh.png
#>- 	$(mkinstalldirs) $(kde_icondir)/hicolor/22x22/apps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/
#>- 	$(INSTALL_DATA) $(srcdir)/hi22-app-kssh.png $(kde_icondir)/hicolor/22x22/apps/kssh.png
#>+ 1
	$(INSTALL_DATA) $(srcdir)/hi22-app-kssh.png $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/kssh.png

uninstall-local:
#>- 	-rm -f $(kde_appsdir)/Internet/kssh.desktop
#>+ 1
	-rm -f $(DESTDIR)$(kde_appsdir)/Internet/kssh.desktop
#>- 	-rm -f $(kde_icondir)/locolor/32x32/apps/kssh.png
#>+ 1
	-rm -f $(DESTDIR)$(kde_icondir)/locolor/32x32/apps/kssh.png
#>- 	-rm -f $(kde_datadir)/konsole/kssh.desktop
#>+ 1
	-rm -f $(DESTDIR)$(kde_datadir)/konsole/kssh.desktop
#>- 	-rm -f $(kde_icondir)/locolor/16x16/apps/kssh.png
#>+ 1
	-rm -f $(DESTDIR)$(kde_icondir)/locolor/16x16/apps/kssh.png
#>- 	-rm -f $(kde_icondir)/hicolor/48x48/apps/kssh.png
#>+ 1
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/kssh.png
#>- 	-rm -f $(kde_icondir)/hicolor/16x16/apps/kssh.png
#>+ 1
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/kssh.png
#>- 	-rm -f $(kde_icondir)/hicolor/22x22/apps/kssh.png
#>+ 1
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/kssh.png

# Uncomment the following two lines if you add a ui.rc file for your application to make use of
# KDE
#rcdir = $(kde_datadir)/kssh
#rc_DATA = ksshui.rc

#WARNING: if you use a ui.rc file above, use:

# messages: rc.cpp

# instead of 

# messages:

messages: 
	LIST=`find . -name \*.h -o -name \*.hh -o -name \*.H -o -name \*.hxx -o -name \*.hpp -o -name \*.cpp -o -name \*.cc -o -name \*.cxx -o -name \*.ecpp -o -name \*.C`; \
	if test -n "$$LIST"; then \
	$(XGETTEXT) $$LIST -o $(podir)/kssh.pot; \
	fi

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 12
ksshdialog.cpp: $(srcdir)/ksshdialog.ui ksshdialog.h ksshdialog.moc
	rm -f ksshdialog.cpp
	echo '#include <klocale.h>' > ksshdialog.cpp
	$(UIC) -tr ${UIC_TR} -i ksshdialog.h $(srcdir)/ksshdialog.ui | sed -e "s,${UIC_TR}( \"\" ),QString::null,g" | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_ksshdialog,g" >> ksshdialog.cpp || rm -f ksshdialog.cpp
	echo '#include "ksshdialog.moc"' >> ksshdialog.cpp

ksshdialog.h: $(srcdir)/ksshdialog.ui
	$(UIC) -o ksshdialog.h $(srcdir)/ksshdialog.ui

ksshdialog.moc: ksshdialog.h
	$(MOC) ksshdialog.h -o ksshdialog.moc

#>+ 3
kssh.moc.cpp: $(srcdir)/kssh.h
	$(MOC) $(srcdir)/kssh.h -o kssh.moc.cpp

#>+ 3
clean-metasources:
	-rm -f  kssh.moc.cpp

#>+ 4
clean-ui:
	-rm -f \
	ksshdialog.cpp ksshdialog.h ksshdialog.moc 

#>+ 2
docs-am:

#>+ 5
force-reedit:
		cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps kssh/Makefile
	cd $(top_srcdir) && perl admin/am_edit kssh/Makefile.in


#>+ 12
kssh_meta_unload.cpp:  kssh.moc.cpp ksshdialog.moc
	@echo 'creating kssh_meta_unload.cpp'
	@-rm -f kssh_meta_unload.cpp
	@if test ${kde_qtver} = 2; then \
		echo 'static const char * _metalist_kssh[] = {' > kssh_meta_unload.cpp ;\
		cat  kssh.moc.cpp ksshdialog.moc | grep 'char.*className' | sed -e 's/.*[^A-Za-z0-9_:]\([A-Za-z0-9_:]*\)::className.*$$/\"\1\",/' | sort | uniq >> kssh_meta_unload.cpp ;\
		echo '0};' >> kssh_meta_unload.cpp ;\
		echo '#include <kunload.h>' >> kssh_meta_unload.cpp ;\
		echo '_UNLOAD(kssh)' >> kssh_meta_unload.cpp ;\
	else echo > kssh_meta_unload.cpp; fi


#>+ 3
clean-moc-classes:
	-rm -f  kssh_meta_unload.cpp

#>+ 11
kssh.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/kssh.cpp $(srcdir)/main.cpp $(srcdir)/ksshdialog.cpp kssh_meta_unload.cpp  kssh.moc.cpp
	@echo 'creating kssh.all_cpp.cpp ...'; \
	rm -f kssh.all_cpp.files kssh.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> kssh.all_cpp.final; \
	for file in kssh.cpp main.cpp ksshdialog.cpp kssh_meta_unload.cpp  kssh.moc.cpp; do \
	  echo "#include \"$$file\"" >> kssh.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> kssh.all_cpp.final; \
	done; \
	cat kssh.all_cpp.final kssh.all_cpp.files  > kssh.all_cpp.cpp; \
	rm -f kssh.all_cpp.final kssh.all_cpp.files

#>+ 3
clean-final:
	-rm -f kssh.all_cpp.cpp

#>+ 2
final:
	$(MAKE) kssh_OBJECTS="$(kssh_final_OBJECTS)" all-am
#>+ 2
final-install:
	$(MAKE) kssh_OBJECTS="$(kssh_final_OBJECTS)" install-am
#>+ 2
no-final:
	$(MAKE) kssh_OBJECTS="$(kssh_nofinal_OBJECTS)" all-am
#>+ 2
no-final-install:
	$(MAKE) kssh_OBJECTS="$(kssh_nofinal_OBJECTS)" install-am
#>+ 3
cvs-clean:
	$(MAKE) -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 3
$(srcdir)/kssh.cpp: ksshdialog.h 
$(srcdir)/main.cpp: ksshdialog.h 
